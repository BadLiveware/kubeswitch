// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: kubeconfigstore/v1/kubeconfig_store.proto

package kubeconfigstorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for VerifyKubeconfigPaths RPC
type VerifyKubeconfigPathsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyKubeconfigPathsRequest) Reset() {
	*x = VerifyKubeconfigPathsRequest{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyKubeconfigPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyKubeconfigPathsRequest) ProtoMessage() {}

func (x *VerifyKubeconfigPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyKubeconfigPathsRequest.ProtoReflect.Descriptor instead.
func (*VerifyKubeconfigPathsRequest) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{0}
}

// Request message for StartSearch RPC
type StartSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartSearchRequest) Reset() {
	*x = StartSearchRequest{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSearchRequest) ProtoMessage() {}

func (x *StartSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSearchRequest.ProtoReflect.Descriptor instead.
func (*StartSearchRequest) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{1}
}

// Request message for GetID RPC
type GetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIDRequest) Reset() {
	*x = GetIDRequest{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDRequest) ProtoMessage() {}

func (x *GetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDRequest.ProtoReflect.Descriptor instead.
func (*GetIDRequest) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{2}
}

type GetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIDResponse) Reset() {
	*x = GetIDResponse{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDResponse) ProtoMessage() {}

func (x *GetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDResponse.ProtoReflect.Descriptor instead.
func (*GetIDResponse) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{3}
}

func (x *GetIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetContextPrefixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetContextPrefixRequest) Reset() {
	*x = GetContextPrefixRequest{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContextPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextPrefixRequest) ProtoMessage() {}

func (x *GetContextPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextPrefixRequest.ProtoReflect.Descriptor instead.
func (*GetContextPrefixRequest) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{4}
}

func (x *GetContextPrefixRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetContextPrefixResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *GetContextPrefixResponse) Reset() {
	*x = GetContextPrefixResponse{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContextPrefixResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextPrefixResponse) ProtoMessage() {}

func (x *GetContextPrefixResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextPrefixResponse.ProtoReflect.Descriptor instead.
func (*GetContextPrefixResponse) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{5}
}

func (x *GetContextPrefixResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type VerifyKubeconfigPathsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Example: "Verified" or "Error"
}

func (x *VerifyKubeconfigPathsResponse) Reset() {
	*x = VerifyKubeconfigPathsResponse{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyKubeconfigPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyKubeconfigPathsResponse) ProtoMessage() {}

func (x *VerifyKubeconfigPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyKubeconfigPathsResponse.ProtoReflect.Descriptor instead.
func (*VerifyKubeconfigPathsResponse) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyKubeconfigPathsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StartSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KubeconfigPath string            `protobuf:"bytes,1,opt,name=kubeconfig_path,json=kubeconfigPath,proto3" json:"kubeconfig_path,omitempty"`
	Tags           map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ErrorMessage   string            `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *StartSearchResponse) Reset() {
	*x = StartSearchResponse{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSearchResponse) ProtoMessage() {}

func (x *StartSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSearchResponse.ProtoReflect.Descriptor instead.
func (*StartSearchResponse) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{7}
}

func (x *StartSearchResponse) GetKubeconfigPath() string {
	if x != nil {
		return x.KubeconfigPath
	}
	return ""
}

func (x *StartSearchResponse) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StartSearchResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetKubeconfigForPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Tags map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetKubeconfigForPathRequest) Reset() {
	*x = GetKubeconfigForPathRequest{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKubeconfigForPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeconfigForPathRequest) ProtoMessage() {}

func (x *GetKubeconfigForPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeconfigForPathRequest.ProtoReflect.Descriptor instead.
func (*GetKubeconfigForPathRequest) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{8}
}

func (x *GetKubeconfigForPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetKubeconfigForPathRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetKubeconfigForPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kubeconfig   []byte `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *GetKubeconfigForPathResponse) Reset() {
	*x = GetKubeconfigForPathResponse{}
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKubeconfigForPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeconfigForPathResponse) ProtoMessage() {}

func (x *GetKubeconfigForPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeconfigForPathResponse.ProtoReflect.Descriptor instead.
func (*GetKubeconfigForPathResponse) Descriptor() ([]byte, []int) {
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP(), []int{9}
}

func (x *GetKubeconfigForPathResponse) GetKubeconfig() []byte {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

func (x *GetKubeconfigForPathResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_kubeconfigstore_v1_kubeconfig_store_proto protoreflect.FileDescriptor

var file_kubeconfigstore_v1_kubeconfig_store_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x22,
	0x1e, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x37, 0x0a, 0x1d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6b, 0x75,
	0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4d, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xb0, 0x04, 0x0a, 0x16, 0x4b, 0x75,
	0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49, 0x44, 0x12, 0x20, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x75, 0x62, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x30, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x26,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x79, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x6f, 0x72, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xf3, 0x01, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6e, 0x69,
	0x65, 0x6c, 0x66, 0x6f, 0x65, 0x68, 0x72, 0x6b, 0x6e, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4b, 0x58,
	0x58, 0xaa, 0x02, 0x12, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4b, 0x75,
	0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4b,
	0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescOnce sync.Once
	file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescData = file_kubeconfigstore_v1_kubeconfig_store_proto_rawDesc
)

func file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescGZIP() []byte {
	file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescOnce.Do(func() {
		file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescData)
	})
	return file_kubeconfigstore_v1_kubeconfig_store_proto_rawDescData
}

var file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_kubeconfigstore_v1_kubeconfig_store_proto_goTypes = []any{
	(*VerifyKubeconfigPathsRequest)(nil),  // 0: kubeconfigstore.v1.VerifyKubeconfigPathsRequest
	(*StartSearchRequest)(nil),            // 1: kubeconfigstore.v1.StartSearchRequest
	(*GetIDRequest)(nil),                  // 2: kubeconfigstore.v1.GetIDRequest
	(*GetIDResponse)(nil),                 // 3: kubeconfigstore.v1.GetIDResponse
	(*GetContextPrefixRequest)(nil),       // 4: kubeconfigstore.v1.GetContextPrefixRequest
	(*GetContextPrefixResponse)(nil),      // 5: kubeconfigstore.v1.GetContextPrefixResponse
	(*VerifyKubeconfigPathsResponse)(nil), // 6: kubeconfigstore.v1.VerifyKubeconfigPathsResponse
	(*StartSearchResponse)(nil),           // 7: kubeconfigstore.v1.StartSearchResponse
	(*GetKubeconfigForPathRequest)(nil),   // 8: kubeconfigstore.v1.GetKubeconfigForPathRequest
	(*GetKubeconfigForPathResponse)(nil),  // 9: kubeconfigstore.v1.GetKubeconfigForPathResponse
	nil,                                   // 10: kubeconfigstore.v1.StartSearchResponse.TagsEntry
	nil,                                   // 11: kubeconfigstore.v1.GetKubeconfigForPathRequest.TagsEntry
}
var file_kubeconfigstore_v1_kubeconfig_store_proto_depIdxs = []int32{
	10, // 0: kubeconfigstore.v1.StartSearchResponse.tags:type_name -> kubeconfigstore.v1.StartSearchResponse.TagsEntry
	11, // 1: kubeconfigstore.v1.GetKubeconfigForPathRequest.tags:type_name -> kubeconfigstore.v1.GetKubeconfigForPathRequest.TagsEntry
	2,  // 2: kubeconfigstore.v1.KubeconfigStoreService.GetID:input_type -> kubeconfigstore.v1.GetIDRequest
	4,  // 3: kubeconfigstore.v1.KubeconfigStoreService.GetContextPrefix:input_type -> kubeconfigstore.v1.GetContextPrefixRequest
	0,  // 4: kubeconfigstore.v1.KubeconfigStoreService.VerifyKubeconfigPaths:input_type -> kubeconfigstore.v1.VerifyKubeconfigPathsRequest
	1,  // 5: kubeconfigstore.v1.KubeconfigStoreService.StartSearch:input_type -> kubeconfigstore.v1.StartSearchRequest
	8,  // 6: kubeconfigstore.v1.KubeconfigStoreService.GetKubeconfigForPath:input_type -> kubeconfigstore.v1.GetKubeconfigForPathRequest
	3,  // 7: kubeconfigstore.v1.KubeconfigStoreService.GetID:output_type -> kubeconfigstore.v1.GetIDResponse
	5,  // 8: kubeconfigstore.v1.KubeconfigStoreService.GetContextPrefix:output_type -> kubeconfigstore.v1.GetContextPrefixResponse
	6,  // 9: kubeconfigstore.v1.KubeconfigStoreService.VerifyKubeconfigPaths:output_type -> kubeconfigstore.v1.VerifyKubeconfigPathsResponse
	7,  // 10: kubeconfigstore.v1.KubeconfigStoreService.StartSearch:output_type -> kubeconfigstore.v1.StartSearchResponse
	9,  // 11: kubeconfigstore.v1.KubeconfigStoreService.GetKubeconfigForPath:output_type -> kubeconfigstore.v1.GetKubeconfigForPathResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_kubeconfigstore_v1_kubeconfig_store_proto_init() }
func file_kubeconfigstore_v1_kubeconfig_store_proto_init() {
	if File_kubeconfigstore_v1_kubeconfig_store_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kubeconfigstore_v1_kubeconfig_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kubeconfigstore_v1_kubeconfig_store_proto_goTypes,
		DependencyIndexes: file_kubeconfigstore_v1_kubeconfig_store_proto_depIdxs,
		MessageInfos:      file_kubeconfigstore_v1_kubeconfig_store_proto_msgTypes,
	}.Build()
	File_kubeconfigstore_v1_kubeconfig_store_proto = out.File
	file_kubeconfigstore_v1_kubeconfig_store_proto_rawDesc = nil
	file_kubeconfigstore_v1_kubeconfig_store_proto_goTypes = nil
	file_kubeconfigstore_v1_kubeconfig_store_proto_depIdxs = nil
}
